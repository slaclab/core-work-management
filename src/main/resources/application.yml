logging:
  level:
    edu.stanford.slac.code_inventory_system: ${CWM_LOG_LEVEL:DEBUG}
server:
  tomcat:
    mbeanregistry:
      enabled: true
spring:
  application:
    name: 'cwm'
  cache:
    cache-names: workflow,domains
    type: hazelcast
  hazelcast:
    config: ${CWM_HAZELCAST_CONFIG_PATH:classpath:hazelcast.yaml}
  ldap:
    urls: ${CWM_LDAP_URI:ldap://localhost:8389}
    base: ${CWM_LDAP_BASE:dc=sdf,dc=slac,dc=stanford,dc=edu}
  data:
    mongodb:
      uri: ${CWM_MONGODB_URI:mongodb://cwm:cwm@localhost:27017/cwm?authSource=cwm&serverSelectionTimeoutMS=2000&connectTimeoutMS=2000}
  kafka:
    bootstrap-servers: ${CWM_KAFKA_BOOTSTRAP:localhost:9094}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${CWM_CONSUMER_GROUP_ID:${random.uuid}}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.ByteArrayDeserializer
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 1MB
      max-file-size: ${CWM_MAX_POST_SIZE:100MB}
      max-request-size: ${CWM_MAX_POST_SIZE:100MB}
edu:
  stanford:
    slac:
      core-work-management:
        #new configuration
        image-preview-topic: ${CWM_IMAGE_PREVIEW_TOPIC:cwm-preview-creation}
        kafka-consumer-concurrency: ${CWM_KAFKA_CONSUMER_CONCURRENCY:1}
        #new configuration
        cis-backend-url: ${CWM_CIS_URL:http://localhost:8081}
        elog-backend-url: ${CWM_ELOG_URL:http://localhost:8082}
        elog-import-topic: ${CWM_ELOG_IMPORT_TOPIC:elog-plus-import-entry}
        workflow-processing-topic: ${CWM_WORKFLOW_PROCESSING_TOPIC:workflow-processing}
        smtp-server: ${CWM_SMTP_SERVER:smtp.slac.stanford.edu}
      ad:
        eed:
          baselib:
            autoload-user-authorizations: true
            app-token-prefix: ${spring.application.name}
            app-token-jwt-key: ${CWM_APP_TOKEN_JWT_KEY:token-header-key}
            user-header-name: ${CWM_AUTH_HEADER:x-vouch-idp-accesstoken}
            oauth-server-discover: ${CWM_OIDC_CONFIGURATION_ENDPOINT:https://dex.slac.stanford.edu/.well-known/openid-configuration}
            root-user-list: ${CWM_ROOT_USERS}
            root-authentication-token-list-json: ${CWM_ROOT_AUTHENTICATION_TOKEN_JSON:[]}
          mongodb:
            db_admin_uri: ${CWM_ADMIN_MONGODB_URI:mongodb://admin:admin@localhost:27017/?authSource=admin}

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  metrics:
    tags:
      application: ${spring.application.name}

# swagger-ui custom path
springdoc:
  title: 'Work Management API'
  description: 'Work Management API for the Accelerator Division at SLAC National Accelerator Laboratory'
  contact:
    name: 'API Support'
    url: 'https://confluence.slac.stanford.edu/display/EEDWAD/EED+Web+Applications'
    email: 'bisegni@sac.stanford.edu'
  swagger-ui:
    enabled: false
  api-docs:
    path: /api-docs

mongock:
  migration-scan-package:
    - edu.stanford.slac.core_work_management.migration
  throw-exception-if-cannot-obtain-lock: true #Default true
  track-ignored: false #Default true
  transaction-enabled: false
  runner-type: initializingbean
  enabled: true #Default true